Ques:- You are given the root of a binary tree with n nodes where each node in the tree has node.val coins. There are n coins
	 in total throughout the whole tree.
	In one move, we may choose two adjacent nodes and move one coin from one node to another. A move may be from parent 
	to child, or from child to parent.
	Return the minimum number of moves required to make every node have exactly one coin.

Solution:

class Solution {
    int total=0;
    public int helper(TreeNode root){
        if(root==null){
            return 0;
        }
        
        int ls = helper(root.left);
        int rs = helper(root.right);
        total+=Math.abs(rs)+Math.abs(ls);
        
        return ls+rs+root.val-1;
    }

    public int distributeCoins(TreeNode root) {
        helper(root);
        return total;
    }
}